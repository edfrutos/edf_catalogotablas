#!/usr/bin/env python3
"""
Script para iniciar mÃºltiples instancias del servidor Flask
Permite tener sesiones separadas en diferentes puertos
"""

import threading
import time

from wsgi import app


def run_server(port, name):
    """Ejecuta el servidor en un puerto especÃ­fico"""
    print(f"ğŸš€ Iniciando servidor {name} en puerto {port}...")
    app.run(debug=False, port=port, host="0.0.0.0", use_reloader=False)


if __name__ == "__main__":
    print("ğŸ”§ ConfiguraciÃ³n para mÃºltiples sesiones:")
    print("   - Puerto 5002: SesiÃ³n principal")
    print("   - Puerto 5002: SesiÃ³n secundaria")
    print("   - Puerto 5003: SesiÃ³n de prueba")
    print()

    # Crear hilos para cada servidor
    server1 = threading.Thread(target=run_server, args=(5002, "Principal"))
    server2 = threading.Thread(target=run_server, args=(5002, "Secundario"))
    server3 = threading.Thread(target=run_server, args=(5003, "Prueba"))

    # Iniciar servidores
    server1.start()
    time.sleep(2)  # Esperar un poco entre inicios
    server2.start()
    time.sleep(2)
    server3.start()

    print("âœ… Todos los servidores iniciados")
    print("ğŸ“‹ URLs disponibles:")
    print("   - http://localhost:5002 (SesiÃ³n 1)")
    print("   - http://localhost:5002 (SesiÃ³n 2)")
    print("   - http://localhost:5003 (SesiÃ³n 3)")
    print()
    print("ğŸ’¡ Uso recomendado:")
    print("   - Puerto 5002: Administrador")
    print("   - Puerto 5002: Usuario normal")
    print("   - Puerto 5003: Usuario de prueba")

    try:
        # Mantener el script ejecutÃ¡ndose
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\nğŸ›‘ Cerrando servidores...")
