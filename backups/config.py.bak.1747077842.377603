import os
from datetime import timedelta
from dotenv import load_dotenv

load_dotenv()

class Config:
    # Clave secreta para sesiones
    SECRET_KEY = os.environ.get('SECRET_KEY', 'clave-secreta-fija-para-produccion')
    MONGO_URI = os.getenv("MONGO_URI")
    
    # Configuración de proxy
    PREFERRED_URL_SCHEME = 'https'
    
    # La configuración de sesión se maneja en app.py
    
    # AWS S3
    AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
    AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
    AWS_REGION = os.getenv("AWS_REGION")
    S3_BUCKET_NAME = os.getenv("S3_BUCKET_NAME")
    
    # Email
    MAIL_SERVER = os.getenv("MAIL_SERVER")
    MAIL_PORT = os.getenv("MAIL_PORT")
    MAIL_USE_TLS = os.getenv("MAIL_USE_TLS")
    MAIL_USERNAME = os.getenv("MAIL_USERNAME")
    MAIL_PASSWORD = os.getenv("MAIL_PASSWORD")
    MAIL_DEFAULT_SENDER_NAME = os.getenv("MAIL_DEFAULT_SENDER_NAME")
    MAIL_DEFAULT_SENDER_EMAIL = os.getenv("MAIL_DEFAULT_SENDER_EMAIL")
    MAIL_DEBUG = os.getenv("MAIL_DEBUG", False)
    
    # Flask debug
    DEBUG = os.getenv("FLASK_DEBUG", False)

    # Sesión
    SESSION_COOKIE_SECURE = True
    SESSION_COOKIE_HTTPONLY = True
    SESSION_COOKIE_SAMESITE = 'Lax'
    SESSION_COOKIE_DOMAIN = None

    UPLOAD_FOLDER = 'uploads'  # O la ruta que prefieras, relativa o absoluta

# Configuración adicional que no necesita entrar en app.config
MONGO_CONFIG = {
    'serverSelectionTimeoutMS': 30000,
    'connectTimeoutMS': 30000,
    'socketTimeoutMS': 45000,
    'retryWrites': True,
    'retryReads': True,
    'maxPoolSize': 50,
    'minPoolSize': 10,
    'maxIdleTimeMS': 300000,
    'waitQueueTimeoutMS': 30000
}

COLLECTION_USERS_UNIFIED = 'users_unified'
COLLECTION_USERS = 'users'
COLLECTION_LOGIN_ATTEMPTS = 'login_attempts'
COLLECTION_RESET_TOKENS = 'reset_tokens'
COLLECTION_AUDIT_LOGS = 'audit_logs'
COLLECTION_CATALOGOS = 'catalogos'

MAX_RETRIES = 3
RETRY_DELAY = 5  # seconds

# SESSION_TYPE = 'filesystem'  # Eliminado para forzar sesiones solo en cookie
