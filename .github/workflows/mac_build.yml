name: Build macOS App v2.0

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify checkout
        run: |
          echo "üîç Verificando checkout del c√≥digo..."
          echo "üìÅ Directorio actual: $(pwd)"
          echo "üìã Archivos en el directorio ra√≠z:"
          ls -la
          echo "üìã Archivos requirements:"
          ls -la requirements*.txt || echo "No hay archivos requirements"
          echo "‚úÖ Verificaci√≥n de checkout completada"

      - name: Verify workflow version
        run: |
          echo "üîç Verificando versi√≥n del workflow..."
          echo "Workflow: Build macOS App v2.0"
          echo "Fecha: $(date)"
          echo "Commit: ${{ github.sha }}"
          echo "‚úÖ Verificaci√≥n completada"

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Verify requirements file exists
        run: |
          echo "üîç Verificando que el archivo requirements_python310.txt existe..."
          if [ ! -f "requirements_python310.txt" ]; then
            echo "‚ùå ERROR: requirements_python310.txt no encontrado"
            echo "üìã Archivos en el directorio:"
            ls -la *.txt || echo "No hay archivos .txt"
            echo "üìã Archivos requirements:"
            ls -la requirements*.txt || echo "No hay archivos requirements"
            exit 1
          fi
          echo "‚úÖ requirements_python310.txt encontrado"
          echo "üìè Tama√±o del archivo: $(wc -l < requirements_python310.txt) l√≠neas"
          echo "üìã Primeras 5 l√≠neas:"
          head -5 requirements_python310.txt

      - name: Install dependencies
        run: |
          echo "üì¶ Instalando dependencias..."
          python -m pip install --upgrade pip
          echo "üìã Instalando desde requirements_python310.txt..."
          pip install -r requirements_python310.txt
          echo "üîß Instalando PyInstaller..."
          pip install pyinstaller==6.15.0 pyinstaller-hooks-contrib==2025.8
          echo "üåê Instalando pywebview..."
          pip install pywebview
          echo "‚úÖ Todas las dependencias instaladas correctamente"

      - name: Setup environment variables (non-sensitive)
        run: |
          echo "üîß Configurando variables de entorno no sensibles..."
          cat > .env << EOF
          FLASK_ENV=production
          APP_VERSION=1.0.0
          BUILD_DATE=$(date +%Y-%m-%d)
          EOF
          echo "‚úÖ Variables de entorno no sensibles configuradas"

      - name: Create placeholder credentials
        run: |
          echo "üìù Creando archivos de credenciales de ejemplo..."
          mkdir -p tools/db_utils
          cat > tools/db_utils/credentials.json.example << 'EOF'
          {
            "installed": {
              "client_id": "your-client-id.apps.googleusercontent.com",
              "project_id": "your-project-id",
              "auth_uri": "https://accounts.google.com/o/oauth2/auth",
              "token_uri": "https://oauth2.googleapis.com/token",
              "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
              "client_secret": "your-client-secret",
              "redirect_uris": ["http://localhost:8080/"]
            }
          }
          EOF
          echo "‚úÖ Archivos de ejemplo creados"

      - name: Clean previous builds
        run: |
          echo "üßπ Limpiando builds anteriores..."
          rm -rf dist/ build/ || true
          find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
          find . -name "*.pyc" -delete 2>/dev/null || true
          find . -name ".mypy_cache" -type d -exec rm -rf {} + 2>/dev/null || true
          find . -name ".pytest_cache" -type d -exec rm -rf {} + 2>/dev/null || true
          echo "‚úÖ Limpieza completa de cach√©s completada"

      - name: Verify spec file
        run: |
          echo "üîç Verificando archivo .spec..."
          cat EDF_CatalogoDeTablas.spec
          echo "‚úÖ Verificaci√≥n completada"
          
      - name: Verify requirements file
        run: |
          echo "üîç Verificando archivo requirements..."
          ls -la requirements_python310.txt
          echo "ÔøΩÔøΩ Contenido del archivo:"
          head -10 requirements_python310.txt
          echo "‚úÖ Verificaci√≥n de requirements completada"

      - name: Build App
        run: |
          echo "Iniciando construcci√≥n de la aplicaci√≥n..."
          python -m PyInstaller EDF_CatalogoDeTablas.spec --clean
          echo "Construcci√≥n completada"

      - name: Verify build output
        run: |
          echo "Verificando salida de construcci√≥n..."
          ls -la dist/
          ls -la dist/EDF_CatalogoDeTablas.app/Contents/MacOS/ || echo "Aplicaci√≥n no construida correctamente"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: EDF_CatalogoDeTablas.app
          path: dist/EDF_CatalogoDeTablas.app
          retention-days: 30

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: |
            dist/
            build/
          retention-days: 7
