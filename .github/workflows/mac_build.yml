name: Build macOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_python310.txt
          pip install pyinstaller==6.15.0 pyinstaller-hooks-contrib==2025.8
          pip install pywebview

      - name: Setup credentials
        run: |
          chmod +x .github/workflows/setup-credentials.sh
          .github/workflows/setup-credentials.sh
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS || '' }}
          GOOGLE_TOKEN: ${{ secrets.GOOGLE_TOKEN || '' }}

      - name: Setup environment variables
        run: |
          echo "ðŸ”§ Configurando variables de entorno..."
          cat > .env << EOF
          MONGO_URI=${{ secrets.MONGO_URI || 'mongodb://localhost:27017/test' }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID || '' }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY || '' }}
          AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET || '' }}
          FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY || 'dev-secret-key' }}
          FLASK_ENV=production
          EOF
          echo "âœ… Variables de entorno configuradas"

      - name: Verify credentials files
        run: |
          echo "Verificando archivos de credenciales..."
          ls -la tools/db_utils/ || echo "Directorio tools/db_utils no encontrado"
          ls -la tools/production/db_utils/ || echo "Directorio tools/production/db_utils no encontrado"

      - name: Build App
        run: |
          echo "Iniciando construcciÃ³n de la aplicaciÃ³n..."
          python -m PyInstaller EDF_CatalogoDeTablas.spec --clean
          echo "ConstrucciÃ³n completada"

      - name: Verify build output
        run: |
          echo "Verificando salida de construcciÃ³n..."
          ls -la dist/
          ls -la dist/EDF_CatalogoDeTablas.app/Contents/MacOS/ || echo "AplicaciÃ³n no construida correctamente"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: EDF_CatalogoDeTablas.app
          path: dist/EDF_CatalogoDeTablas.app
          retention-days: 30

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: |
            dist/
            build/
          retention-days: 7
